name: Release

on:
  push:
    branches:
      - release

jobs:
  release:
    name: Trigger release
    runs-on: ubuntu-latest
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
       - name: Clone release branch ../release
         run: git clone -b release https://github.com/$GITHUB_REPOSITORY ../release

       - name: Set env
         run: |
            echo ::set-env name=RELEASE_VERSION::$(cat ../release/addon.xml|grep "<addon"|sed "s/.* version=\"\(.*\)\" .*/\1/")
            echo ::set-env name=PLUGIN_CHANGELOG::$(cat ../release/addon.xml|sed -n '/<news>/,/<\/news>/p'|sed 's#<news>##g'|sed 's#</news>##g'|sed '/^ *$/d'|tr '\n' '@'|sed 's#@#<br />#g')

       - name: Create plugin zip files for Kodi
         id: prepare_zip
         working-directory: ../release
         run: |
            sed -i 's#<reuselanguageinvoker>false</reuselanguageinvoker>#<reuselanguageinvoker>true</reuselanguageinvoker>#g' addon.xml
            zip -r plugin.video.iptv.recorder.zip . -x '*.git*' -x \*.pyo -x \*.gitignore
            echo "::set-output name=zip_filepath::$(realpath plugin.video.iptv.recorder.zip)"

       - name: Prepare GitHub release
         id: prepare_release
         run: |
           echo "::set-output name=tag_name::$(echo v$RELEASE_VERSION)"
           echo "::set-output name=release_name::$(echo v$RELEASE_VERSION)"
           echo "::set-output name=body::$(echo $PLUGIN_CHANGELOG)"
           echo "::set-output name=target_commitish::$(echo release)"

       - name: Create Release
         id: create_release
         uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe
         with:
          tag_name: ${{ steps.prepare_release.outputs.tag_name }}
          release_name: ${{ steps.prepare_release.outputs.release_name }}
          body: ${{ steps.prepare_release.outputs.body }}
          target_commitish: ${{ steps.prepare_release.outputs.target_commitish }}
          draft: false
          prerelease: false

       - name: Upload release zip file
         uses: actions/upload-release-asset@v1
         with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ${{ steps.prepare_zip.outputs.zip_filepath }}
            asset_name: plugin.video.iptv.recorder.zip
            asset_content_type: application/zip
